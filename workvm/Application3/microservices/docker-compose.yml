# This file is intended for use with "docker stack"
# Might not work with docker-compose

version: '3'

services:
  business_microservice: #一个服务(容器)
    image: regserv:5000/business_microservice
    build:              #构建镜像
      context: ./BusinessMicroservice  #上下文环境
      dockerfile: Dockerfile #指定的构建文件
    depends_on:
      - io_microservice
      - cpu_microservice
      - memory_microservice
    links:
      - io_microservice:io
      - cpu_microservice:cpu
      - memory_microservice:memory
    environment:
      - BV_REPORT_HOST=10.137.0.81:8080
    deploy:
      replicas: 5
      placement:
        constraints: [node.role != controlvm]
      restart_policy:
        condition: any
    networks:
      - appnet
    ports: 
      - "8080:8080"

  io_microservice:
    image: regserv:5000/io_microservice
    build:
      context: ./IoMicroservice
      dockerfile: Dockerfile
    deploy:
      replicas: 5
      placement:
        constraints: [node.role != controlvm]
      restart_policy:
        condition: any
    networks:
      - appnet
    ports: 
      - "5003:80"

  cpu_microservice:
    image: regserv:5000/cpu_microservice
    build:
      context: ./CpuMicroservice
      dockerfile: Dockerfile
    deploy:
      replicas: 5
      placement:
        constraints: [node.role != controlvm]
      restart_policy:
        condition: any
    networks:
      - appnet
    ports: 
      - "5004:80"

  memory_microservice:
    image: regserv:5000/memory_microservice
    build:
      context: ./MemoryMicroservice
      dockerfile: Dockerfile
    networks:
      - appnet
    ports: 
      - "5005:80"
    deploy:
      replicas: 5
      resources:
        limits:
          memory: 512M #内存使用限制
      placement:
        constraints: [node.role != controlvm]
      restart_policy:
        condition: any

networks: # Overlay network 跨VM的网络
  appnet: 