# This file is intended for use with "docker stack"
# Might not work with docker-compose

version: '3'

services:
  business_microservice:
    image: regserv:5000/business_microservice
    depends_on:
      - io_microservice
      - cpu_microservice
      - memory_microservice
    environment:
      - BV_REPORT_HOST=10.137.0.81:8080 # This is broken at the moment
    deploy:
      labels:
        saasi.microservices.type: "business"
      replicas: 5
      placement:
        constraints: [node.role != manager]
      restart_policy:
        condition: any
    networks:
      - appnet
    ports: 
      - "8080:8080"

  io_microservice:
    image: regserv:5000/io_microservice
    deploy:
      labels:
        saasi.microservices.type: "api"
      replicas: 5
      placement:
        constraints: [node.role != manager]
      restart_policy:
        condition: any
    networks:
      appnet:
        aliases:
          - io
    ports: 
      - "5003:80"

  cpu_microservice:
    image: regserv:5000/cpu_microservice
    deploy:
      labels:
        saasi.microservices.type: "api"
      replicas: 5
      placement:
        constraints: [node.role != manager]
      restart_policy:
        condition: any
    networks:
      appnet:
        aliases:
          - cpu
    ports: 
      - "5004:80"

  memory_microservice:
    image: regserv:5000/memory_microservice
    networks:
      appnet:
        aliases:
          - memory
    ports: 
      - "5005:80"
    deploy:
      labels:
        saasi.microservices.type: "api"
      replicas: 5
      resources:
        limits:
          memory: 512M
      placement:
        constraints: [node.role != manager]
      restart_policy:
        condition: any

  visualizer:
    image: dockersamples/visualizer:stable
    ports: 
     - "80:8080"
    volumes:
     - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
     - appnet


  # Monitoring Components

  cadvisor:
    image: google/cadvisor:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8088:8080"
    deploy:
      #placement:
      #  constraints: [node.role == manager]
      mode: global
      restart_policy:
        condition: on-failure
    networks:
      - appnet

  prometheus:
    image: regserv:5000/prometheus:latest
    ports:
      - "9090:9090"
    deploy:
      placement:
        constraints: [node.role == manager]
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - appnet

  grafana:
    image: regserv:5000/grafana:latest
    networks:
      - appnet
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana:/var/lib/grafana
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

networks: # Overlay network 
  appnet: # Network for the microservices
  controlnet: # Network for the controllers
